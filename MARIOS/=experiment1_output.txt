Score: 0.9938943514510364
Score: 0.9342861773703814
Score: 0.9856434437994868
Score: 0.9220139077650107
Score: 0.9999896460229202
Score: 0.9918099718576933
Total cpus available: 10
RUNNING EXPERIMENT 1 YOU ARE NOT RUNNING EXP TESTS RIGHT NOW
TEST
on track
Score: 0.99675404015631
Score: 0.9986034829620862
Score: 0.9999999998201107
Score: 0.999998815777053
Score: 0.999999999993558
Score: 0.9996543901616586
Score: 0.9999999882484671
Score: 0.9328162841392299
{'size': 'publish', 'verbose': False, 'target_frequency': 1000, 'obs_hz': 1000.0, 'target_hz': 1000.0, 'model': 'cyclic'}
block
great success
Train Region Train/Observers shape: (1576, 284)
Test Region Train/Observers shape: (1577, 284)
Train Region Target shape: (1576, 286)
Test Region Target shape: (1577, 286)
.cyclic.
cyclicrc cv set, ready to train 
Model initialization and exploration run...
Starting optimization... 

Hayden edit: space: <GPyOpt.core.task.space.Design_space object at 0x2b0f13a09950>
Hayden edit: fixed_parameters: ['n_nodes']
Hayden edit: free_parameters: ['cyclic_res_w', 'cyclic_input_w', 'cyclic_bias', 'leaking_rate']
Score: 0.9978197722188905
Score: 0.9398413801045314
Score: 0.9836965401234179
Score: 0.9906727152689259
Score: 0.9999999994499823
Score: 0.9999999856653948
Score: 0.9551056293440436
Score: 0.9490881471380532
Score: 0.9934851071808928
Score: 0.99475609434513
Score: 0.9720759349024423
Score: 0.9613977418941163
Score: 0.9693143568161001
Score: 0.9999999835246273
Score: 0.9185671671110209
Score: 0.8778128957638791
Score: 0.9637155433982847
Score: 0.929846638662462
Score: 0.9723154978366012
Score: 0.999999917216045
Score: 0.9998516705628449
Score: 0.9998918727962648
Score: 0.9717465095031903
Score: 0.9966289674475584
Score: 0.9947194086673197
Score: 0.9678740564218218
Score: 0.9873808917667409
Score: 0.9694699819336337
Score: 0.9290028955964897
Score: 0.9677983843633997
Score: 0.9600883284379867
Score: 0.9967510495679004
Score: 0.9999983719947632
Score: 0.9759442318514243
Score: 0.9992181463820233
Score: 0.986528983663574
Score: 0.9445511926191373
Score: 0.9996405946592533
Score: 0.9188313290066492
Score: 0.9503353123163173
Score: 0.9760566079420617
Score: 0.9953130033432551
Score: 0.9993234811286
Score: 0.908635582862207
Score: 0.934021537961963
Score: 0.9999999990693529
Score: 0.9708619870799082
Score: 0.99535986277247
Score: 0.9847635638801466
Score: 0.9961716242525402
Score: 0.9917489155752246
Score: 0.9977765286147608
Score: 0.9999999476905295
Score: 0.8102117679805454
Score: 0.9679623238991535
Score: 0.9685279071236084
Score: 0.9846292154550589
Score: 0.9733329651476403
Score: 0.9766527399234679
Score: 0.919778063573327
Score: 0.8247957631129146
Score: 0.9659814945993539
Score: 0.9999521023680276
Score: 0.9996933104044852
Score: 0.9960000713716504
Score: 0.9723119446588324
Score: 0.9932096033082991
Score: 0.9638824994402952
Score: 0.9634056076976429
Score: 0.9490033116179393
Score: 0.9999999999999973
Score: 0.9988499646713255
Score: 0.9983309780683542
Score: 0.9380988380516104
Score: 0.9992529992789361
Score: 0.9419777062167678
Score: 0.9785521077086892
Score: 0.9895515963688468
Score: 0.9454518229743866
Score: 0.9938186782979707
Score: 0.988069914067228
Score: 0.9735779831668945
Score: 0.8888382796320686
Score: 0.9923575004310102
Score: 0.9103831111740492
Score: 0.9999860587946652
Score: 0.9999999999410887
Score: 0.9999181330058162
Score: 0.9818735082610486
Score: 0.9999999999848351
Score: 0.8987787325546647
Score: 0.9197419449236023
Score: 0.9987140441474409
Score: 0.9999996829067167
Score: 0.9537670148908632
Score: 0.9586010515667688
Score: 0.9993911926383178
Score: 0.9998858641962504
Score: 0.9951518189432357
Score: 0.7968175545457991
Score: 0.9761198093103647
Score: 0.8871768488291447
Score: 0.9668376110907402
Score: 0.999929045261116
Score: 0.8569999140989861
Score: 0.9278285664859208
Score: 0.8322630851368933
Score: 0.9794748131706624
Score: 0.8621033530070963
Score: 0.8916437616161463
Score: 0.880573900828109
Score: 0.9893076545524848
Converged at iteration 1690
Done after 1690 iterations.
Bayesian Optimization complete. Now running saving data, getting prediction etc. 
{'bounds': {'n_nodes': 1000, 'cyclic_res_w': (-4, 0.5), 'cyclic_input_w': (-4, 0.5), 'cyclic_bias': (-1, 1), 'leaking_rate': (0.001, 1)}, 'scoring_method': 'tanh', 'n_jobs': 10, 'verbose': True, 'plot': False, 'cv_samples': 8, 'max_iterations': 2000, 'eps': 1e-06, 'subsequence_length': 700, 'initial_samples': 300, 'activation_function': 'sin_sq', 'model_type': 'cyclic', 'esn_feedback': False, 'obs_index': [91, 94, 100, 103], 'target_index': [97], 'exp_weights': False}
