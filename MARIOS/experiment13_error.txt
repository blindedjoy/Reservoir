reconstraining parameters Mat52.lengthscale
reconstraining parameters Mat52.variance
reconstraining parameters GP_regression.Gaussian_noise.variance
multiprocessing.pool.RemoteTraceback: 
"""
Traceback (most recent call last):
  File "/n/home00/hjoy/rc/Reservoir/MARIOS/PyFiles/experiment.py", line 999, in getData2Save
    json2be["experiment_inputs"]["obs_hz"] = float(self.obs_kHz)	* 1000
AttributeError: 'EchoStateExperiment' object has no attribute 'obs_kHz'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/n/sw/eb/apps/centos7/Anaconda3/2019.10/lib/python3.7/multiprocessing/pool.py", line 121, in worker
    result = (True, func(*args, **kwds))
  File "/n/sw/eb/apps/centos7/Anaconda3/2019.10/lib/python3.7/multiprocessing/pool.py", line 44, in mapstar
    return list(map(*args))
  File "execute.py", line 217, in run_experiment
    experiment.RC_CV(cv_args = cv_args, model = model_)
  File "/n/home00/hjoy/rc/Reservoir/MARIOS/PyFiles/experiment.py", line 1184, in RC_CV
    self.save_json()
  File "/n/home00/hjoy/rc/Reservoir/MARIOS/PyFiles/experiment.py", line 1212, in save_json
    self.getData2Save()
  File "/n/home00/hjoy/rc/Reservoir/MARIOS/PyFiles/experiment.py", line 1002, in getData2Save
    json2be["experiment_inputs"]["target_freqs"] = self.target_freqs
AttributeError: 'EchoStateExperiment' object has no attribute 'target_freqs'
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "execute.py", line 406, in <module>
    start = timeit.default_timer()
  File "execute.py", line 391, in test
    pool = MyPool(n_experiments)
  File "/n/sw/eb/apps/centos7/Anaconda3/2019.10/lib/python3.7/multiprocessing/pool.py", line 268, in map
    return self._map_async(func, iterable, mapstar, chunksize).get()
  File "/n/sw/eb/apps/centos7/Anaconda3/2019.10/lib/python3.7/multiprocessing/pool.py", line 657, in get
    raise self._value
AttributeError: 'EchoStateExperiment' object has no attribute 'target_freqs'
